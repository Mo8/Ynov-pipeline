name: Python package

on: [ push,workflow_dispatch ]

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Lint with black
        run: |
          black . --check
  test:
    needs: lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.9", "3.10" , "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest bottle pytest-cov
      - name: Test pytest
        run: pytest --cov=. . | tee pytest-coverage.txt
      - name: Coverage Badge
        uses: tj-actions/coverage-badge-py@v1.8
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v12
        id: verify-changed-files
        with:
          files: |
            test-app/coverage/badge.svg

      - name: Create Pull Request
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: peter-evans/create-pull-request@v3
        with:
          base: "main"
          title: "Updated coverage badge"
          branch: "chore/update-coverage-badge"
          commit-message: "Updated coverage badge."
          body: "Updated coverage badge."
          token: ${{ github.token }}
  deployment:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: echo mep
        run: echo "MEP"
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Test if website is up ðŸš€
        run: |
          python -c "import requests; exit(1) if requests.get('https://www.google.fr').status_code != 200 else exit(0)"
  notification:
    if: success() || failure()
    needs: deployment

    runs-on: ubuntu-latest
    steps:
      - name: notif
        run: echo ${{job.status}}